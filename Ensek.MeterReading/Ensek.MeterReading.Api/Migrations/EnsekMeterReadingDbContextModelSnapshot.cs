// <auto-generated />
using System;
using Ensek.MeterReading.Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ensek.MeterReading.Api.Migrations
{
    [DbContext(typeof(EnsekMeterReadingDbContext))]
    partial class EnsekMeterReadingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Ensek.MeterReading.Api.Data.Model.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Ensek.MeterReading.Api.Data.Model.MeterReading", b =>
                {
                    b.Property<int>("MeterReadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MeterReadValue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MeterReadingAt")
                        .HasColumnType("TEXT");

                    b.HasKey("MeterReadingId");

                    b.HasIndex("AccountId");

                    b.ToTable("MeterReading");
                });

            modelBuilder.Entity("Ensek.MeterReading.Api.Data.Model.MeterReading", b =>
                {
                    b.HasOne("Ensek.MeterReading.Api.Data.Model.Account", "Account")
                        .WithMany("MeterReading")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Ensek.MeterReading.Api.Data.Model.Account", b =>
                {
                    b.Navigation("MeterReading");
                });
#pragma warning restore 612, 618
        }
    }
}
